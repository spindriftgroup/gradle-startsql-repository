/**
 * Copyright (C) 2012-2017 Spindrift B.V. All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.8"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
  }
}

apply plugin: "com.gradle.plugin-publish"

group 'com.spindrift'

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: "com.jfrog.bintray"

repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  testCompile gradleTestKit()
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
    exclude module: 'groovy-all'
  }
}

def versionProps = new Properties()
file("gradle.properties").withInputStream {versionProps.load(it) }
version=versionProps.version
if (!hasProperty('release') || (hasProperty('release') && release!='true')) {
  project.version+='-SNAPSHOT'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

defaultTasks 'publishToMavenLocal'
publishToMavenLocal.dependsOn 'build'

publishing {
  publications {
    mavenGroovy(MavenPublication) {
      groupId = group
      artifactId project.name
      version = project.version
      artifact "${project.buildDir}/libs/${project.name}-${version}.jar"
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = "2.14.1"
}

//Functional Test configuration

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
  def outputDir = file("$buildDir/classpath")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

// Add the classpath file to the test runtime classpath
dependencies {
  testRuntime files(createClasspathManifest)
}

//Gradle plugin portal publishing
pluginBundle {
  website = 'https://github.com/spindriftgroup/gradle-startsql-repository'
  vcsUrl = 'https://github.com/spindriftgroup/gradle-startsql-repository'
  description = 'Oracle Commerce (ATG) startSQLRepository utility wrapper plugin.'
  tags = ['startsqlrepository', 'oracle', 'spindrift', 'atg']
  group = "com.spindrift"

  plugins {
    startSQLRepository {
      id = 'com.spindrift.startsql-repository'
      displayName = 'Gradle startSQLRepository wrapper plugin'
    }
  }
  mavenCoordinates {
    groupId = "com.spindrift"
  }
}

//Bintray publishing (based on maven-publishing configuration)
bintray {
  user = "$BINTRAY_USER"
  key = "$BINTRAY_API_KEY"
  publications = ['mavenGroovy']
  pkg {
    repo = 'gradle-plugins'
    name = "startsql-repository"
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/spindriftgroup/gradle-startsql-repository'
    version {
      name = project.version
      desc = "Gradle startSQLRepository wrapper plugin ${project.version}"
      released = new Date()
      vcsTag = project.version
      attributes = ['gradle-plugin':'com.spindrift:startsql-repository']
    }
  }
}
